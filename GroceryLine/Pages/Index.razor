@page "/"
@inject LinesService LinesService;
@using GroceryLine.Components
@using GroceryLine.Models;
@using GroceryLine.Services;

<PageTitle>Index</PageTitle>

<main class="display">
    <aside class="settings-wrapper">
        <div class="setting">
            <label>
                Lines Scanning? 
                <InputCheckbox @bind-Value=LinesService.IsScanningItems />
            </label>
        </div>
        <div class="setting">
            <label>
                Items in Cart: 
                <InputNumber @bind-Value=CustomerItemCountToAdd />
                <button @onclick=OnCustomerAdd>Checkout</button>
            </label>
        </div>
        <br />
        <div class="setting">
            <label>
                Checkout Time in Milliseconds: 
                <InputNumber @bind-Value=LinesService.CheckoutRateMilliseconds />
            </label>
        </div>
        <div class="setting">
            <label>
                Items Scanned at Once: 
                <InputNumber @bind-Value=LinesService.CheckoutAmount />
            </label>
        </div>
        <div class="setting">
            <label>
                Lines: 
                <button class="oi oi-minus" @onclick=RemoveLine />
                <button class="oi oi-plus" @onclick=AddLine />
            </label>
        </div>
        <div class="setting">

            <button @onclick=AddCustomersToAllLines>Generate More Customers</button>
        </div>
    </aside>
    <section class="lines-container">
        @foreach (Line line in Lines)
        {
            <LineComponent Line="line" />
        }
    </section>
</main>

@code {
    private List<Line> Lines { get => LinesService.Lines; }

    private int CustomerItemCountToAdd { get; set; }

    private void OnCustomerAdd()
    {
        LinesService.AddCustomer(CustomerItemCountToAdd);
    }

    protected override void OnParametersSet()
    {
        LinesService.ValueChanged += StateHasChanged;
        base.OnParametersSet();
    }

    private void RemoveLine()
    {
        LinesService.RemoveLine();
    }

    private void AddLine()
    {
        LinesService.AddLine();
    }

    private void AddCustomersToAllLines()
    {
        LinesService.AddCustomersToAllLines();
    }
}